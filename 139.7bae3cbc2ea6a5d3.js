"use strict";(self.webpackChunkhack=self.webpackChunkhack||[]).push([[139],{139:(c,e,i)=>{i.r(e),i.d(e,{blog:()=>o});const o='\n<h2>Nivel 0</h2>\n    Lee el fichero que se encuentra en la home del usuario.\n    <h3>Credenciales</h3>\n    <p>Pw: Bandit0</p>\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>ssh bandit0@bandit.labs.overthewire.org - p 2220</pre>\n    </div>\n    <h3>Aprendizajes:</h3>\n    <p>En este nivel 0 aprendemos el uso de los siguientes comandos de linux</p>\n    <blockquote>\n        <ul>\n            <li><code>ls: Lista los archivos y carpetas</code></li>\n            <li><code>cat nombreArchivo</code> Ense\xf1a por pantalla el contenido de un archivo</li>\n        </ul>\n    </blockquote>\n\n    <h3>Soluci\xf3n</h3>\n    <div class="spoiler-btn"> Mostrar soluci\xf3n</div>\n    <div class="hidden">\n        <div class="terminal">\n            <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n            <pre>cat readme </pre>\n        </div>\n    </div>\n\n\n\n    <br><br>\n    <h2>Nivel 1</h2>\n    Lee el fichero que se encuentra en la home del usuario.\n    <h3>Credenciales</h3>\n    <p>Pw: boJ9jbbUNNfktd78OOpsqOltutMc3MY1</p>\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>ssh bandit1@bandit.labs.overthewire.org - p 2220</pre>\n    </div>\n    <h3>Aprendizajes:</h3>\n    <p>Es esta practica es importante saber diferencias las caracteristicas concretas de cada fichero.<br>\n        Con el comando: <code>ls -l</code> podremos ver los detalles de cada fichero y ver de que tipo se trata.\n         La primera letra determina el tipo de fichero.<br>\n          A continuaci\xf3n vemos la leyenda</p>\n    <blockquote>\n        <ul>\n            <li> \u2013 : regular file.</li>\n            <li> d : directory.</li>\n            <li> c : character device file.</li>\n            <li> b : block device file.</li>\n            <li> s : local socket file.</li>\n            <li> p : named pipe.</li>\n            <li> l : symbolic link.</li>\n            <li> D : door (Solaris)</li>\n\n        </ul>\n    </blockquote>\n\n    <h3>Soluci\xf3n</h3> \n\n    <div class="spoiler-btn"> Mostrar soluci\xf3n</div>\n    <div class="hidden">\n        <p>Al tener un caracter especial debemos indicarle la ruta relativa o absoluta para la lectura del fichero.</p>\n        <div class="terminal">\n            <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n            <pre>cat ./- </pre>\n        </div>\n    </div>\n\n\n\n    <br><br>\n    <h2>Nivel 2</h2>\n    Lee el fichero que se encuentra en la home del usuario.\n    <h3>Credenciales</h3>\n    <p>Pw: CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9</p>\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>ssh bandit2@bandit.labs.overthewire.org - p 2220</pre>\n    </div>\n    <h3>Aprendizajes:</h3>\n    <p>Esta practica actualmente esta obselota, ya que las distribuciones modernas pulsando TAB te autocompletan el path. La idea inicial era que supieras como acceder\n        a un fichero con espaciados o caracteres especiales entre medio.\n    </p>\n    <h3>Soluci\xf3n</h3>\n    <div class="spoiler-btn"> Mostrar soluci\xf3n</div>\n    <div class="hidden">\n        <div class="terminal">\n            <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n            <pre>cat spaces in this filename \n            </pre>\n        </div>\n    </div>\n\n\n    <br><br>\n    <h2>Nivel 3</h2>\n    Lee el fichero <strong>oculto</strong> que se encuentra en el directorio.\n    <h3>Credenciales</h3>\n    <p>Pw: UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK</p>\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>ssh bandit3@bandit.labs.overthewire.org - p 2220</pre>\n    </div>\n    <h3>Aprendizajes:</h3>\n    <p>Lo que se intenta conseguir es utilizar los diferentes parametros del comando <code>ls</code>. Lo aprendido hasta ahora:</p>\n    <blockquote>\n        <ul>\n            <li><code>ls: Lista los archivos y carpetas</code></li>\n            <li><code>ls -l: Lista los archivos y los detalles</code></li>\n            <li><code>ls -la : Muestra todos los ficheros sin ignorar ocultos.</code></li>\n        </ul>\n    </blockquote>\n\n    <h3>Soluci\xf3n</h3>\n    <div class="spoiler-btn"> Mostrar soluci\xf3n</div>\n    <div class="hidden">\n        <p>En este reto si escribimos "<code>cat inhere/</code>" y pulsamos varias veces el TAB, tamb\xeden podemos todos los archivos del directorio sin listarlos.</p>\n        <div class="terminal">\n            <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n            <pre>cat inhere/.hidden</pre>\n        </div>\n    </div>\n\n\n    <br><br>\n    <h2>Nivel 4</h2>\n    Lee el fichero <strong>human-readable</strong> que se encuentra en el directorio.\n    <h3>Credenciales</h3>\n    <p>Pw: pIwrPrtPN36QITSp3EQaw936yaFoFgAB</p>\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>ssh bandit4@bandit.labs.overthewire.org - p 2220</pre>\n    </div>\n    <h3>Aprendizajes:</h3>\n    <p>En este reto vemos que por muchas opciones que uticemos del comando "<code>ls</code>" no hay manera de ver el tipo de contenido que tienen los ficheros.<br>\n        Para ello necesitamos un nuevo comando: <code>file</code>.</p>\n    <blockquote>\n        <ul>\n            <li><code>file archivo: Determina y clasifica el tipo de fichero basado en una serie de test </code></li>\n        </ul>\n    </blockquote>\n\n    <h3>Soluci\xf3n</h3>\n    <div class="spoiler-btn"> Mostrar soluci\xf3n</div>\n    <div class="hidden">\n        <div class="terminal">\n            <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n            <pre>file inhere/*</pre>\n        </div>\n    </div>\n\n    \n\n    <br><br>\n    <h2>Nivel 5</h2>\n    Lee el fichero <strong>human-readable de 1033 bits no ejecutable</strong> que se encuentra en algun directorio.\n    <h3>Credenciales</h3>\n    <p>Pw: koReBOKuIDDepwhWk7jZC0RTdopnAYKh</p>\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>ssh bandit5@bandit.labs.overthewire.org - p 2220</pre>\n    </div>\n    <h3>Aprendizajes:</h3>\n    <p>De nuevo nos hacen la trampa ahora que hemos aprendido el comando "file" para identificar los tipos de fichero, necesitamos hacer lo mismo pero \n        recursivo para todas las carpertas.\n        Para ello necesitamos un nuevo comando: <code>find</code>.<br><br>\n        <code>find</code> es un comando muy extenso con muchas utilidades. Para esta pr\xe1ctica necesitamos buscar con <code>man find</code> los referente a ejecutar comandos y buscar ficheros por size.\n    </p>\n    <blockquote>\n        <ul>\n            <li><code>find -type: Puedes indicar el tipo de fichero </code></li>\n            <li><code>find -executable Matches files which are executable and directories which are searchable </code></li>\n            <li><code>find -readable  Matches  files which are readable. </code></li>\n            <li><code>find -type: Puedes indicar el tipo de fichero </code></li>\n            <li><code>find -syze:</code></li>\n            <ul>\n                <li>b - for 512-byte blocks (this is the default if no suffix is used)</li>\n                <li>c - for bytes</li>\n                <li>w - for two-byte words</li>\n                <li>k - for Kilobytes (units of 1024 bytes)</li>\n                <li>M - for Megabytes (units of 1048576 bytes)</li>\n                <li>G - for Gigabytes (units of 1073741824 bytes)</li>\n            </ul>\n        </ul>\n    </blockquote>\n\n    <h3>Soluci\xf3n</h3>\n    <div class="spoiler-btn"> Mostrar soluci\xf3n</div>\n    <div class="hidden">\n        <div class="terminal">\n            <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n            <pre>find inhere/ -type f -size 1033c -readable ! -executable -exec file &#123;&#125; ;</pre>\n        </div>\n    </div>\n    \n\n\n\n    <br><br>\n    <h2>Nivel 6</h2>\n    Lee el fichero <strong>owned by user bandit7 group by bandit 6 33bytes</strong> que se encuentra en algun directorio.\n    <h3>Credenciales</h3>\n    <p>Pw: DXjZPULLxYr17uwoI01bNLQbtFemEgo7</p>\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>ssh bandit6@bandit.labs.overthewire.org - p 2220</pre>\n    </div>\n    <h3>Aprendizajes:</h3>\n    <p>Este nivel es muy parecido al anterior, en este caso nos hacen buscar por usuario y por grupo.\n     De nuevo utilizamos <code>man find</code> y buscamos como hacer una busqueda por usuario y por grupo.\n    </p>\n    <blockquote>\n        <ul>\n            <li><code>find -user: File is owned by user uname (numeric user ID allowed).</code></li>\n            <li><code>find -group: File belongs to group gname (numeric group ID allowed).</code></li>\n            <li><code>2>/dev/null: Oculta errores</code></li>\n        </ul>\n    </blockquote>\n\n    <h3>Soluci\xf3n</h3>\n    <div class="spoiler-btn"> Mostrar soluci\xf3n</div>\n    <div class="hidden">\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>find / -type f -size 33c -user bandit7 -group bandit6 2>/dev/null</pre>\n    </div>\n    </div>\n\n\n\n    <br><br>\n    <h2>Nivel 7</h2>\n    El token esta <strong>al lado de la palabra millionth</strong> que se encuentra en data.txt.\n    <h3>Credenciales</h3>\n    <p>Pw: HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs</p>\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>ssh bandit7@bandit.labs.overthewire.org - p 2220</pre>\n    </div>\n    <h3>Aprendizajes:</h3>\n    <p>Para este reto necesitamos conocer un nuevo comando <code>grep</code>. Recordad que utilizando <code>man grep</code> podemos ver toda la documentaci\xf3n.\n    </p>\n    <blockquote>\n        <ul>\n            <li><code>grep palabra : Busca linea por linea en un fichero por la palabra dada.</code></li>\n        </ul>\n    </blockquote>\n\n    <h3>Soluci\xf3n</h3>\n    <div class="spoiler-btn"> Mostrar soluci\xf3n</div>\n    <div class="hidden">\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>grep millionth data.txt</pre>\n    </div>\n    </div>\n\n\n    <br><br>\n    <h2>Nivel 8</h2>\n    Esta vez el reto consiste en <strong>filtrar las lineas duplicadas</strong> que se encuentra en data.txt.\n    <h3>Credenciales</h3>\n    <p>Pw: cvX2JJa4CFALtqS87jk27qwqGhBM9plV</p>\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>ssh bandit8@bandit.labs.overthewire.org - p 2220</pre>\n    </div>\n    <h3>Aprendizajes:</h3>\n    <p>Para encontrar duplicados existe el comando <code>uniq</code>.\n    </p>\n    <blockquote>\n        <ul>\n            <li><code>uniq : Compara linea tras linea.</code></li>\n            <li><code>sort : Ordena los ficheros.</code></li>\n        </ul>\n    </blockquote>\n\n    <h3>Soluci\xf3n</h3>\n    <div class="spoiler-btn"> Mostrar soluci\xf3n</div>\n    <div class="hidden">\n    <p>        Utilizando solo el comando "uniq" no conseguimos el objetivo ya que solo detecta duplicidad si son lineas de textos que estan juntas. Por\n    eso necesitamos primero utilizar "sort" y luego "uniq".</p>\n    <div class="terminal">\n\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>sort data.txt | uniq -u</pre>\n    </div>\n    </div>\n\n\n    <br><br>\n    <h2>Nivel 10</h2>\n    La flag esta codificada en <strong>base64</strong> en el archivo data.txt.\n    <h3>Credenciales</h3>\n    <p>Pw: truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk</p>\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>ssh bandit10@bandit.labs.overthewire.org - p 2220</pre>\n    </div>\n    <h3>Aprendizajes:</h3>\n    <p>En este caso tenemos que conocer el commando <code>base64</code> y como codificar/descodificar.\n    </p>\n    <blockquote>\n        <ul>\n            <li><code>file -i : Te dice el tipo de archivo al que te enfrentas.</code></li>\n            <li><code>base64 -d: decodifica un fichero.</code></li>\n        </ul>\n    </blockquote>\n\n    <h3>Soluci\xf3n</h3>\n    <div class="spoiler-btn"> Mostrar soluci\xf3n</div>\n    <div class="hidden">\n    <div class="terminal">\n\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>strings base64 -d data.txt </pre>\n    </div>\n    </div>\n\n\n\n\n    <br><br>\n    <h2>Nivel 11</h2>\n    El flag esta codificado en <strong>ROT13</strong> en el archivo data.txt.\n    <h3>Credenciales</h3>\n    <p>Pw: IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR</p>\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>ssh bandit11@bandit.labs.overthewire.org - p 2220</pre>\n    </div>\n    <h3>Aprendizajes:</h3>\n    <p>Aqui se han pegado una buena fumadita para ser un nivel 0, y nos estan indicando una codificaci\xf3n por desplazamiento de letras de 13 posiciones, \n    es decir:<br>\n     la A ser\xe1 N.<br>\n     la B ser\xe1 M.<br>\n     ...<br>\n     Para esto existe un comando <code>tr</code> nada intuitivo de usar para este caso.\n    </p>\n    <blockquote>\n        <ul>\n            <li><code>tr : Translate, squeeze, and/or delete characters from standard input, writing to standard output.</code></li>\n        </ul>\n    </blockquote>\n\n    <h3>Soluci\xf3n</h3>\n    <div class="spoiler-btn"> Mostrar soluci\xf3n</div>\n    <div class="hidden">\n    <p>Tenemos que indicarle que nuestro alfabeto normal de la A-Z lo substituya por una que vaya de la  N-Z y de la A-M.</p>\n        <div class="terminal">\n            <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n            <pre>cat data.txt | tr "A-Za-z" "N-ZA-Mn-za-m"</pre>\n        </div>\n    </div>\n    \n\n    <br><br>\n    <h2>Nivel 12</h2>\n    El flag es un <strong>hexdump</strong> comprimido repetidas veces. Este reto si que pertenece a un nivel 0 ya que se va aprender el uso de crear/copiar carpetas y descomprimir ficheros. Aunque se puede hacer un poco pesado por la repeticion de hasta 8 veces.\n    <h3>Credenciales</h3>\n    <p>Pw: 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu</p>\n    <div class="terminal">\n        <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n        <pre>ssh bandit12@bandit.labs.overthewire.org - p 2220</pre>\n    </div>\n    <h3>Aprendizajes:</h3>\n    <p>Lo primero que vemos es que al no tener privilegos no podemos escribir en la home por lo tanto nos tenemos que ir a una carpetan temporal para\n    poder alli descomprimir los ficheros.<br>\n    Segundo tenemos que conocer el comando "<code>xxd</cod> para la creaci\xf3n de hexdumps.\n    </p>\n    <blockquote>\n        <ul>\n            <li><code>xxd -r : Revierte del codificado.</code></li>\n            <li><code>mkdir  : Crea carpetas.</code></li>\n            <li><code>cp  : Copia ficheros.</code></li>\n            <li><code>mv  : Cambia el tipo fichero.</code></li>\n            <li><code>tar -xf  : descomprime POSIX tar archive.</code></li>\n            <li><code>gzip -d  : descomprime dz files.</code></li>\n            <li><code>bzip2 -d  : descomprime bz2 files.</code></li>\n        </ul>\n    </blockquote>\n\n    <h3>Soluci\xf3n</h3>\n    <div class="spoiler-btn"> Mostrar soluci\xf3n</div>\n    <div class="hidden">\n    <p>Tiene que cambiar la extension del archivo y descomprimirlo infinitas veces. Pongo el primer ejemplo y se tiene que repetir hasta data8</p>\n        <div class="terminal">\n            <img class="clipboard" src="https://cdn.iconscout.com/icon/free/png-256/copy-127-444629.png">\n            <pre>xxd -r data.txt > data</pre>\n            <pre>file data</pre>\n            <pre>mv data data.gz</pre>\n            <pre>gzip -d data.gz</pre>\n        </div>\n    </div>\n    \n    \n    8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL\n'}}]);