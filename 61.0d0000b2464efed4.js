"use strict";(self.webpackChunkhack=self.webpackChunkhack||[]).push([[61],{61:(r,e,a)=>{a.r(e),a.d(e,{blog:()=>o});const o='\n<h2>Como funcionan  IDS / FIREWALL</h2>\n\n<p> Los 2 elementos son complementarios e imprencindibles para una red y funcionan en base a reglas escritas. Ya sean a\xf1adidas o por defecto.\nComparan el trafico entrante con esas reglas y ejecutan las acciones que tengan establecidad.\n</p>\n\n\n<blockquote>\n    Diferencias: <br>\n        \xb7 Firewall: Bloquea todo excepto lo que yo permita. Suelen centrarse en el analisis de cabeceras<br>\n        \xb7 IDS: Solo analiza e informa si alguna regla coincide. Suelen centrarse en el payload o carga util (el contenido vamos)<br>\n</blockquote>\n\n\n<h4>Como funciona IDS y tipos</h4>\n<p> Un IDS puede detectar amenazas de diferentes formas:\n<blockquote>\n        \xb7 Firmas: Comparando ya ataques o patrones conocidos<br>\n        \xb7 Reputacion: Usado en los antivirus o antimalwares.\n        \xb7 Comportamiento o anomalias: Analiza la red para detectar comportamientos no deseados o fuera de lo normal<br>\n</blockquote>\n\n<p> Hay dos tipos: <br>\nLos de tipo Host que solo pueden analizar las entras y salidas de un dispositivos.<br>\nLos de tipo Red que son capaces de analizar toda una red.</p>\n</p> \n\n\n<h2>Vamos al turron! Practica con CyberOps de Cisco y SNORT</h2>\n\n<p>Vamos a configurar un IDS/IPS a nivel de software en un router, la arquitectura es la siguiente:</p>\n<img src="./assets/img/idsips.png">\n\n<p>Simplemente practica para ver que el IDS cuando un ordenador de la red se descarga un archivo malicioso se queja, esto se conectar\xeda a nuestro SIEM que veriamos la alerta\nen tiempo real y apartir de aqui se procederia a bloquear el trafico de ese servidor. Aunque supongo que habr\xe1 alguna manera de automatizar que si la detecci\xf3n viene de una fuente firmada\nse autobloquee.\n</p>\n\n<img src="./assets/img/ids1.png">\n\n\n<p>Ahora no dirigimos al firewall y bloqueamos ese trafico del puerto concreto, cosa que solo nos bloquear\xe1 ese servicio y no la maquina entera</p>\n<blockquote>\n\t-I FORWARD: inserta una regla nueva en la cadena FORWARD.<br>\n\t-p tcp: especifica el protocolo TCP.<br>\n\t-d 209.165.202.133: especifica el destino del paquete.<br>\n\t-dport 6666: especifica el puerto de destino.<br>\n\t-j DROP: define la acci\xf3n a descartar. <br>\n</blockquote>\n\n\n\n<img src="./assets/img/ids2.png">\n\n\n<p>El tr\xe1fico que ingresa al firewall y tiene como destino al propio dispositivo de firewall es manejado por la cadena <b>INPUT</b>. Como ejemplo de este tr\xe1fico podemos mencionar a los paquetes de ping provenientes de cualquier otro dispositivo en cualquier red y enviados a cualquiera de las interfaces del firewall.<br><br>\nEl tr\xe1fico que se origina en el propio dispositivo de firewall y tiene como destino cualquier otro lugar es manejado por la cadena <b>OUTPUT</b>. Un ejemplo de este tr\xe1fico son las respuestas de ping generadas por el propio dispositivo de firewall.<br><br>\nEl tr\xe1fico originado en cualquier otro lugar y que atraviesas el dispositivo de firewall es manejado por la cadena <b>FORWARD.</b> Un ejemplo de este tr\xe1fico son los paquetes que est\xe1 enrutando el firewall.<br><br>\n</p>\n'}}]);